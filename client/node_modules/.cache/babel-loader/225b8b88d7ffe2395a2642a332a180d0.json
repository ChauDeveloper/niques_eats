{"ast":null,"code":"var _jsxFileName = \"/Users/chau/UCF_BC/projects/niques_eats/client/src/components/PaymentBtn/index.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"../PaymentBtn/style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst PaymentBtn = () => {\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  const [state, dispatch] = useStoreContext();\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n\n  function submitCheckout() {\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, \"Checkout\"));\n};\n\nexport default PaymentBtn;","map":{"version":3,"sources":["/Users/chau/UCF_BC/projects/niques_eats/client/src/components/PaymentBtn/index.js"],"names":["React","useEffect","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","Link","stripePromise","PaymentBtn","getCheckout","data","state","dispatch","getCart","cart","type","products","length","then","res","redirectToCheckout","sessionId","checkout","session","submitCheckout","productIds","forEach","item","i","purchaseQuantity","push","_id","variables"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,yBAAP;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,qBAAlD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,aAAa,GAAGH,UAAU,CAAC,kCAAD,CAAhC;;AACA,MAAMI,UAAU,GAAG,MAAM;AACxB,QAAM,CAACC,WAAD,EAAc;AAAEC,IAAAA;AAAF,GAAd,IAA0BL,YAAY,CAACF,cAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,eAAe,EAAzC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeiB,OAAf,GAAyB;AACxB,YAAMC,IAAI,GAAG,MAAMZ,UAAU,CAAC,MAAD,EAAS,KAAT,CAA7B;AACAU,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEd,oBAAR;AAA8Be,QAAAA,QAAQ,EAAE,CAAC,GAAGF,IAAJ;AAAxC,OAAD,CAAR;AACA;;AAED,QAAI,CAACH,KAAK,CAACG,IAAN,CAAWG,MAAhB,EAAwB;AACvBJ,MAAAA,OAAO;AACP;AACD,GATQ,EASN,CAACF,KAAK,CAACG,IAAN,CAAWG,MAAZ,EAAoBL,QAApB,CATM,CAAT;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIc,IAAJ,EAAU;AACTH,MAAAA,aAAa,CAACW,IAAd,CAAoBC,GAAD,IAAS;AAC3BA,QAAAA,GAAG,CAACC,kBAAJ,CAAuB;AAAEC,UAAAA,SAAS,EAAEX,IAAI,CAACY,QAAL,CAAcC;AAA3B,SAAvB;AACA,OAFD;AAGA;AACD,GANQ,EAMN,CAACb,IAAD,CANM,CAAT;;AASA,WAASc,cAAT,GAA0B;AACzB,UAAMC,UAAU,GAAG,EAAnB;AAEAd,IAAAA,KAAK,CAACG,IAAN,CAAWY,OAAX,CAAoBC,IAAD,IAAU;AAC5B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,gBAAzB,EAA2CD,CAAC,EAA5C,EAAgD;AAC/CH,QAAAA,UAAU,CAACK,IAAX,CAAgBH,IAAI,CAACI,GAArB;AACA;AACD,KAJD;AAMAtB,IAAAA,WAAW,CAAC;AACXuB,MAAAA,SAAS,EAAE;AAAEhB,QAAAA,QAAQ,EAAES;AAAZ;AADA,KAAD,CAAX;AAGA;;AAED,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CADD;AAMA,CA5CD;;AA8CA,eAAehB,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"../PaymentBtn/style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nconst PaymentBtn = () => {\n\tconst [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\tconst [state, dispatch] = useStoreContext();\n\n\tuseEffect(() => {\n\t\tasync function getCart() {\n\t\t\tconst cart = await idbPromise(\"cart\", \"get\");\n\t\t\tdispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n\t\t}\n\n\t\tif (!state.cart.length) {\n\t\t\tgetCart();\n\t\t}\n\t}, [state.cart.length, dispatch]);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tstripePromise.then((res) => {\n\t\t\t\tres.redirectToCheckout({ sessionId: data.checkout.session });\n\t\t\t});\n\t\t}\n\t}, [data]);\n\n\n\tfunction submitCheckout() {\n\t\tconst productIds = [];\n\n\t\tstate.cart.forEach((item) => {\n\t\t\tfor (let i = 0; i < item.purchaseQuantity; i++) {\n\t\t\t\tproductIds.push(item._id);\n\t\t\t}\n\t\t});\n\n\t\tgetCheckout({\n\t\t\tvariables: { products: productIds },\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={submitCheckout}>Checkout</button>\n\t\t\t\t\t\n\t\t</div>\n\t);\n};\n\nexport default PaymentBtn;\n"]},"metadata":{},"sourceType":"module"}